name: ci

on:
  push:
    branches: [ main, refactoring ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - name: ⬇️  Checkout
      uses: actions/checkout@v4

    - name: 🦀  Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.81 # Rust 1.81 is the current stable and required by trunk’s deps
        targets: wasm32-unknown-unknown # host triple + wasm so we can build either way
        components: clippy, rustfmt

    - name: 💾  Cache cargo registry + target dirs
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    # ---------- quality gates ----------
    - name: ✍️  cargo fmt
      run: cargo fmt --all -- --check

    - name: 🔎  cargo clippy
      run: cargo clippy --workspace --all-targets -- -D warnings

    # ---------- build ----------
    - name: 🏗️  cargo build (host)
      run: cargo build --release

    - name: 🌐  cargo build (wasm32)
      run: cargo build --release --target wasm32-unknown-unknown

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Step 1: Check out the repo code
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      # Step 2: Set up a Node.js runtime (for Playwright)
      - name: 🧰 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install npm dependencies (Playwright + its test runner)
      - name: 📦 Install NPM dependencies
        run: npm install

      # Step 4: Install Playwright-managed browser binaries (Chromium, Firefox, WebKit)
      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      # Step 5: Run all E2E tests in headless mode
      - name: ✅ Run Playwright tests
        run: npm run test:e2e
